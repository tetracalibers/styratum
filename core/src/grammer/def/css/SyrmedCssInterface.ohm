SyrmedCssInterface <: Primitive {
  pureAtomic += collectionKeyword | combinator | constantSelector
  addedAtomic += tagSelector
  
  /* -------------------------------------------------------------------------- */
  /* selector list                                                              */
  /* -------------------------------------------------------------------------- */
  
  SelectorList = Selector ("," Selector)*
  
  /* -------------------------------------------------------------------------- */
  /* selector                                                                   */
  /* -------------------------------------------------------------------------- */
  
  /* Selector */
  Selector = 
    | EnumSelector combinator Selector -- composite
    | EnumSelector
  EnumSelector = 
    | basicSelector* PredicateSelector -- predicate
    | basicSelector+
  PredicateSelector = PseudoSelector | attributeSelector
  basicSelector = tagSelector | constantSelector
  
  /* tagSelector */
  tagSelector = htmlTagSelector | jsxTagSelector
  htmlTagSelector = lower (digit | lower)*
  jsxTagSelector = pascalCase
  
  /* atomic Selector */
  constantSelector = rootSelector | universalSelector
  rootSelector = "&"
  universalSelector = "*"
  
  /* -------------------------------------------------------------------------- */
  /* attribute                                                                  */
  /* -------------------------------------------------------------------------- */
  
  /* attributeSelector */
  attributeSelector = attributePredicate+
  
  attributePredicate = 
    | "[" kebabCase equal generatedLiteral "]" -- value
    | "[" kebabCase "]" -- has
    
  equal = "=" | "*=" | "$=" | "~="
  
  /* -------------------------------------------------------------------------- */
  /* pseudo                                                                     */
  /* -------------------------------------------------------------------------- */
  
  /* Pseudo Selector */
  PseudoSelector = Pseudo+
  
  /* Pseudo */
  Pseudo = 
    | "::" kebabCase ("(" PseudoArg ")")* -- element
    | ":" kebabCase ("(" PseudoArg ")")* -- class
  PseudoArg = nth | props | Selector | letter+ | digit+ 
  
  /* nth */
  nth = (nthTerm | generatedNumber | operator)+
  nthTerm = number* "n"
  
  /* -------------------------------------------------------------------------- */
  /* combinator                                                                 */
  /* -------------------------------------------------------------------------- */
  combinator = adjacentSiblijngCombinator | generalSiblijngCombinator | childCombinator | columnCombinator
  adjacentSiblijngCombinator = "+"
  generalSiblijngCombinator = "~"
  childCombinator = ">"
  columnCombinator = "||"
  
  /* -------------------------------------------------------------------------- */
  /* PropertyName                                                               */
  /* -------------------------------------------------------------------------- */
  
  PropertyName = kebabCase | collectionKeyword
  collectionKeyword = "@" "collection"
  
  /* -------------------------------------------------------------------------- */
  /* PropertyValue                                                              */
  /* -------------------------------------------------------------------------- */
  
  PropertyValue = PropertyValueFunc | Formula | kebabCase | pascalCase
  PropertyValueFunc = kebabCase "(" Formula ("," Formula)* ")"
}